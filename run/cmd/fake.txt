TAG="Oct_10"

# Jobs to get the input histos to compute the probabilities
# Exclude signals and Sherpa WZ (126893); include Powheg WZ [129477--129494]
# (see re at https://www.debuggex.com/r/MOYoxD1a_-HNnZu9)
./python/submitJobs.py --fakerate -o --tag=${TAG} -e '(Sherpa_CT10_lllnu_WZ|noslep.*_WH)'
./python/submitJobs.py --fakerate -o --tag=${TAG} -s 'PowhegPythia8_AU2CT10_WZ_W' --alsoplaceholders

# When the jobs are done, merge the outputs as needed
# By default, mergeOutput picks up the files with the latest tag.
./python/mergeOutput.py -v --onedata --allBkg --allBkgButHf out/fakerate/

# Determine the contamination from prompt leptons to the HF estimate
# in the high-pt tail
./python/iterativeCorrection.py \
 --input_data out/fakerate/merged/data_${TAG}.root \
 --input_mc   out/fakerate/merged/allBkgButHf_${TAG}.root \
 --output     out/fakerate/merged/iterative_out_${TAG}.root \
 --plot       out/fakerate/merged/iterative_plots_${TAG} \
 >& log/fakerate/IterFake_${TAG}.log

# Determine the scale factors (p_T dep flat fit).
# Here, for the real-lepton efficiencies (tag-and-probe),
# the Z-peak sideband subtraction is also applied.
# The SF are printed out to screen; copy them to FinalNewFake.h
./python/determineFakeScaleFactor.py \
 --tag ${TAG} \
 --input_dir  out/fakerate/merged/ \
 --input_iter out/fakerate/merged/iterative_out_${TAG}.root \
 --output_dir out/fakerate/merged/plot_${TAG} \
 >& log/fakerate/FakePlot_${TAG}.log

# Produce the weighted matrix with FinalNewFake.
# This is also where the fractions are computed and plotted.
./python/buildWeightedMatrix.py \
 -t ${TAG} \
 -i out/fakerate/merged/ \
 -o out/fakerate/merged/FinalFakeHist_${TAG}.root \
 -p out/fakerate/merged/FinalFakeHist_plots_${TAG} \
 -v \
 >& log/fakerate/FinalFakeHist_${TAG}.log


# copy the matrix file and modify the batch template
# (fakepred.sh.template) to use it; submit fake prediction jobs.
cp -p \
   out/fakerate/merged/FinalFakeHist_${TAG}.root \
   ${ROOTCOREDIR}/../SusyMatrixMethod/data/
enw batch/templates/fakepred.sh.template
./python/submitJobs.py --fakepred -o  -t ${TAG} -s 'period'

# When the jobs are done, merge the outputs as needed
./python/mergeOutput.py -v --onedata out/fakepred/

# Make the closure plots using the new prediction
python/plotFakeClosure.py \
 --tag ${TAG} \
 --input_dir  out/susyplot/merged/ \
 --input_fake out/fakepred/merged/data_${TAG}.root \
 --output_dir out/fakepred/merged/fake_closure_plots_${TAG}

# to make the closure plots you might need the susyplot histograms
./python/submitJobs.py --susyplot -o  -t ${TAG} -e 'wA_noslep'
