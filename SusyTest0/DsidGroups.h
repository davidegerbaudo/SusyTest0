#ifndef SUSY_WH_DSIDGROUPS_H
#define SUSY_WH_DSIDGROUPS_H

// This header was generated by print_group_header.py on 2014-03-09 01:03:46.915713

#include "SusyTest0/XsecUncertainty.h"
#include <vector>
#include <algorithm>
namespace susy {
namespace wh {


const int kDsidForkTriboson [] = { 126739,126742,126856,167006,167007,167008,129136,147668 } ;
const int kDsidForkTtbarZ [] = { 119355,174832,174833 } ;
const int kDsidForkZz [] = { 179396,126894,183586,183588,183590,177999 } ;
const int kDsidForkHiggs [] = { 160155,160655,161005,161555,161566,161577,160205,160705,161055,160255,160505,160755,161105,161805,160305,160555,160805,161155,161675,161686,161697,167418,161305,161708,161719,161730,169072 } ;
const int kDsidForkTtbar [] = { 110001,119583,164439,158344 } ;
const int kDsidForkZjets [] = { 178354,178355,178356,178357,178358,178359,178360,178361,178362,178363,178364,178365,178366,178367,178368,178369,178370,178371,178372,178373,178374,178375,178376,178377,178378,178379,178380,178381,178382,178383,178384,178385,178386,178387,178388,178389,178390,178391,178392,178393,178394,178395,178396,178397,178398,178399,178400,178401,178402,178403,178404,178405,178406,178407,117650,117651,117652,117653,117654,117655,117660,117661,117662,117663,117664,117665,117670,117671,117672,117673,117674,117675,110817,110818,110819,110820,110821,110822,110823,110824,110825,110826,110827,110828,110805,110806,110807,110808,110809,110810,110811,110812,110813,110814,110815,110816 } ;
const int kDsidForkTtbarW [] = { 119353,174830,174831 } ;
const int kDsidForkWwjj [] = { 126988,126989 } ;
const int kDsidForkWw [] = { 169471,169472,169473,169474,169475,169476,169477,169478,169479,183734,183736,183738,177997 } ;
const int kDsidForkWz [] = { 183585,183587,183589,183591,183735,183737,183739,179974,179975 } ;
const int kDsidForkSingleTop [] = { 108346,117360,117361,117362,179991,179992,169704,169705,169706 } ;



bool dsidInArray(const int dsid, const int* dsidList)
{
   size_t nElements = sizeof(dsidList)/sizeof(dsidList[0]);
   const int* begin = dsidList;
   const int* end   = dsidList + nElements;
   const int* it    = std::find(begin, end, dsid);
   return it!=end;
}

XsecUncertainty::McGroup groupFromDsid(int dsid)
{
    XsecUncertainty::McGroup group = XsecUncertainty::kUnknown;
    if(dsidInArray(dsid, kDsidForkHiggs)) group = XsecUncertainty::kHiggs;
    else if(dsidInArray(dsid, kDsidForkSingleTop)) group = XsecUncertainty::kSingleTop;
    else if(dsidInArray(dsid, kDsidForkTriboson)) group = XsecUncertainty::kTriboson;
    else if(dsidInArray(dsid, kDsidForkTtbar)) group = XsecUncertainty::kTtbar;
    else if(dsidInArray(dsid, kDsidForkTtbarW)) group = XsecUncertainty::kTtbarW;
    else if(dsidInArray(dsid, kDsidForkTtbarZ)) group = XsecUncertainty::kTtbarZ;
    else if(dsidInArray(dsid, kDsidForkWw)) group = XsecUncertainty::kWw;
    else if(dsidInArray(dsid, kDsidForkWwjj)) group = XsecUncertainty::kWwjj;
    else if(dsidInArray(dsid, kDsidForkWz)) group = XsecUncertainty::kWz;
    else if(dsidInArray(dsid, kDsidForkZjets)) group = XsecUncertainty::kZjets;
    else if(dsidInArray(dsid, kDsidForkZz)) group = XsecUncertainty::kZz;
    return group;
}
} // wh
} // susy
#endif
